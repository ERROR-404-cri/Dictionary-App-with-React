{"version":3,"sources":["components/word-details/word-meanings/WordMeanings.module.css","App.module.css","components/word-details/WordPhonetics.module.css","components/search-bar/SearchBar.module.css","components/word-details/WordMain.module.css","components/word-details/word-meanings/WordDefintionsList.module.css","environment/environment.ts","components/search-bar/SearchBar.tsx","utils/commonFuntion.tsx","components/word-details/word-meanings/WordMeanings.tsx","components/word-details/word-meanings/WordDefintionsList.tsx","components/word-details/WordPhonetics.tsx","components/word-details/WordMain.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","API_PATH","SearchBar","passDataFun","useState","word","setWord","a","fetch","response","json","debouncedCallApiFunction","useCallback","cb","delay","timer","param","clearTimeout","setTimeout","call","debounce","useEffect","className","styles","sticky","htmlFor","type","id","box","placeholder","value","onInput","event","target","WordMeanings","props","definitionObj","definition","pTag","partOfSpeech","handDown","definitions","map","definitionelem","index","defination","meaning","lineHeight","subHeading","example","synonyms","antonyms","uniqueId","WordDefintionsList","meaningsArr","meanings","audioTagRef","React","createRef","WordPhonetics","AudioState","setAudioState","phoneticsData","preload","src","audio","ref","onEnded","controls","pause","play","onClick","prev","current","WordMain","wordData","Data","error","foundWord","phonetics","App","DictionaryData","setDictionaryData","container","textCenter","heading","data","Object","keys","length","href","goToTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99512192.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pTag\":\"WordMeanings_pTag__1GxqN\",\"definition\":\"WordMeanings_definition__B3gNN\",\"lineHeight\":\"WordMeanings_lineHeight__NOG1S\",\"subHeading\":\"WordMeanings_subHeading___5dMp\",\"meaning\":\"WordMeanings_meaning__6AEs1\",\"handDown\":\"WordMeanings_handDown__2JtVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MsAs\",\"textCenter\":\"App_textCenter__2QxEs\",\"heading\":\"App_heading__2SMhm\",\"goToTop\":\"App_goToTop__3ype1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"WordPhonetics_controls__1JD1e\",\"play\":\"WordPhonetics_play__3HNSd\",\"pause\":\"WordPhonetics_pause__IsdMa\",\"pTag\":\"WordPhonetics_pTag__2j4TT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"SearchBar_box__2Wl5J\",\"sticky\":\"SearchBar_sticky__32HUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foundWord\":\"WordMain_foundWord__uP-l3\",\"error\":\"WordMain_error__3ks2C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defination\":\"WordDefintionsList_defination__1v-Fe\"};","export const API_PATH = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport styles from \"./SearchBar.module.css\";\r\nimport { debounce } from \"../../utils/commonFuntion\";\r\nimport { API_PATH } from \"../../environment/environment\";\r\n\r\nconst SearchBar = ({ passDataFun }) => {\r\n  const [word, setWord] = useState(\"\");\r\n\r\n  async function callDictionaryApi(word: string) {\r\n    if (!word) {\r\n      return;\r\n    }\r\n    let response = await fetch(`${API_PATH}${word}`);\r\n    response = await response.json();\r\n    if (!response[\"message\"]) {\r\n      passDataFun(response[0]);\r\n    } else {\r\n      passDataFun(response);\r\n    }\r\n  }\r\n  let debouncedCallApiFunction = useCallback(\r\n    debounce(callDictionaryApi, 250),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    debouncedCallApiFunction(word);\r\n  }, [word]);\r\n\r\n  function inputHandler(event: any) {\r\n    setWord(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.sticky}>\r\n      <label htmlFor=\"searchBar\"></label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"searchBar\"\r\n        className={styles.box}\r\n        placeholder={\"Enter any word\"}\r\n        value={word}\r\n        onInput={inputHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","export function debounce(cb: (word: string) => void, delay: number) {\r\n  let timer;\r\n  return function (param) {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      cb.call(null, param);\r\n    }, delay);\r\n  };\r\n}\r\n","import styles from \"./WordMeanings.module.css\";\r\nimport {\r\n  DefinitionsModel,\r\n  MeaningsModel,\r\n} from \"../../../models/Response.model\";\r\nimport { uniqueId } from \"lodash\";\r\n\r\nconst WordMeanings = (props) => {\r\n  let definitionObj: MeaningsModel = props.definition;\r\n  return (\r\n    <>\r\n      <p className={styles.pTag}>\r\n        parts of speech : {definitionObj.partOfSpeech}{\" \"}\r\n        <span className={styles.handDown}>ðŸ‘‡</span>\r\n      </p>\r\n      {definitionObj.definitions.map((definitionelem, index) => {\r\n        let defination: DefinitionsModel = definitionelem;\r\n        return (\r\n          <div key={uniqueId()} className={styles.definition}>\r\n            <p className={styles.meaning}>\r\n              <span>meaning</span> {index + 1}:\r\n            </p>\r\n            {defination.definition && (\r\n              <p className={styles.lineHeight}>\r\n                <span className={styles.subHeading}>definition</span> :{\" \"}\r\n                {defination.definition}\r\n              </p>\r\n            )}\r\n            {defination.example && (\r\n              <p className={styles.lineHeight}>\r\n                <span className={styles.subHeading}>example</span> :{\" \"}\r\n                {defination.example}\r\n              </p>\r\n            )}\r\n            {defination.synonyms[0] && (\r\n              <p className={styles.lineHeight}>\r\n                <span className={styles.subHeading}>synonyms</span> :{\" \"}\r\n                {defination.synonyms[0]}\r\n              </p>\r\n            )}\r\n            {defination.antonyms[0] && (\r\n              <p className={styles.lineHeight}>\r\n                <span className={styles.subHeading}>antonyms</span> :{\" \"}\r\n                {defination.antonyms[0]}\r\n              </p>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default WordMeanings;\r\n","import { MeaningsModel } from \"../../../models/Response.model\";\r\nimport WordMeanings from \"./WordMeanings\";\r\nimport { uniqueId } from \"lodash\";\r\nimport styles from \"./WordDefintionsList.module.css\";\r\n\r\nconst WordDefintionsList = (props: any) => {\r\n  let meaningsArr: MeaningsModel[] = props.meanings;\r\n  return (\r\n    <>\r\n      {meaningsArr.map((definition) => {\r\n        return (\r\n          <div className={styles.defination} key={uniqueId()}>\r\n            <WordMeanings definition={definition} />\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default WordDefintionsList;\r\n","import React, { useState } from \"react\";\r\nimport { PhoneticsModel } from \"../../models/Response.model\";\r\nimport styles from \"./WordPhonetics.module.css\";\r\nlet audioTagRef = React.createRef<HTMLAudioElement>();\r\n\r\nconst WordPhonetics = (props) => {\r\n  const [AudioState, setAudioState] = useState(false);\r\n  let phoneticsData: PhoneticsModel = props.phoneticsData;\r\n\r\n  function playPauseHandler() {\r\n    if (AudioState) {\r\n      return;\r\n    }\r\n    setAudioState((prev) => {\r\n      //@ts-ignore\r\n      audioTagRef.current.play();\r\n      return !prev;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p className={styles.pTag}>\r\n        Pronunciation (audio):\r\n        <audio\r\n          preload=\"auto\"\r\n          src={phoneticsData[0].audio}\r\n          ref={audioTagRef}\r\n          onEnded={() => {\r\n            setAudioState(!AudioState);\r\n          }}\r\n        >\r\n          <span>audio is not supported on this browser</span>\r\n        </audio>\r\n        <button\r\n          className={`${styles.controls} ${\r\n            AudioState ? styles.pause : styles.play\r\n          }`}\r\n          onClick={playPauseHandler}\r\n        ></button>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nexport default WordPhonetics;\r\n","import { MeaningsModel, ResponseModel } from \"../../models/Response.model\";\r\nimport WordDefintionsList from \"./word-meanings/WordDefintionsList\";\r\nimport WordPhonetics from \"./WordPhonetics\";\r\nimport styles from \"./WordMain.module.css\";\r\n\r\nconst WordMain = (props) => {\r\n  let wordData: ResponseModel = props.Data;\r\n  let meanings: MeaningsModel[] = wordData.meanings;\r\n  return (\r\n    <>\r\n      {wordData[\"message\"] ? (\r\n        <p className={styles.error}>{wordData[\"message\"]}</p>\r\n      ) : (\r\n        <div>\r\n          <h2>\r\n            Found word :{\" \"}\r\n            <span className={styles.foundWord}>'{wordData.word}'</span>\r\n          </h2>\r\n          <WordPhonetics phoneticsData={wordData.phonetics} />\r\n          <WordDefintionsList meanings={meanings} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default WordMain;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./App.module.css\";\r\nimport SearchBar from \"./components/search-bar/SearchBar\";\r\nimport WordMain from \"./components/word-details/WordMain\";\r\nimport { ResponseModel } from \"./models/Response.model\";\r\n\r\nfunction App() {\r\n  const [DictionaryData, setDictionaryData] = useState({});\r\n\r\n  function passDictionaryData(data: ResponseModel) {\r\n    setDictionaryData(data);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <p id=\"first\" className={`${styles.textCenter} ${styles.heading}`}>\r\n        Word Dictionary App\r\n      </p>\r\n      <SearchBar passDataFun={passDictionaryData} />\r\n      {Object.keys(DictionaryData).length > 0 ? (\r\n        <WordMain Data={DictionaryData} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <a href=\"#first\" className={styles.goToTop}>\r\n        Top\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}